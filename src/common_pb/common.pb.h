// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_INCLUDED_common_2eproto
#define PROTOBUF_INCLUDED_common_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto 

namespace protobuf_common_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_common_2eproto
namespace xy {
class Info;
class InfoDefaultTypeInternal;
extern InfoDefaultTypeInternal _Info_default_instance_;
class RequestPacket;
class RequestPacketDefaultTypeInternal;
extern RequestPacketDefaultTypeInternal _RequestPacket_default_instance_;
class RequestPacket_ContextEntry_DoNotUse;
class RequestPacket_ContextEntry_DoNotUseDefaultTypeInternal;
extern RequestPacket_ContextEntry_DoNotUseDefaultTypeInternal _RequestPacket_ContextEntry_DoNotUse_default_instance_;
class ResponsePacket;
class ResponsePacketDefaultTypeInternal;
extern ResponsePacketDefaultTypeInternal _ResponsePacket_default_instance_;
class ResponsePacket_ContextEntry_DoNotUse;
class ResponsePacket_ContextEntry_DoNotUseDefaultTypeInternal;
extern ResponsePacket_ContextEntry_DoNotUseDefaultTypeInternal _ResponsePacket_ContextEntry_DoNotUse_default_instance_;
}  // namespace xy
namespace google {
namespace protobuf {
template<> ::xy::Info* Arena::CreateMaybeMessage<::xy::Info>(Arena*);
template<> ::xy::RequestPacket* Arena::CreateMaybeMessage<::xy::RequestPacket>(Arena*);
template<> ::xy::RequestPacket_ContextEntry_DoNotUse* Arena::CreateMaybeMessage<::xy::RequestPacket_ContextEntry_DoNotUse>(Arena*);
template<> ::xy::ResponsePacket* Arena::CreateMaybeMessage<::xy::ResponsePacket>(Arena*);
template<> ::xy::ResponsePacket_ContextEntry_DoNotUse* Arena::CreateMaybeMessage<::xy::ResponsePacket_ContextEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xy {

enum ECallType {
  ECallType_Sync = 0,
  ECallType_Async = 1,
  ECallType_OneWay = 2
};
bool ECallType_IsValid(int value);
const ECallType ECallType_MIN = ECallType_Sync;
const ECallType ECallType_MAX = ECallType_OneWay;
const int ECallType_ARRAYSIZE = ECallType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECallType_descriptor();
inline const ::std::string& ECallType_Name(ECallType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECallType_descriptor(), value);
}
inline bool ECallType_Parse(
    const ::std::string& name, ECallType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECallType>(
    ECallType_descriptor(), name, value);
}
enum EPackageType {
  EPackageType_Pb = 0,
  EPackageType_Json = 1
};
bool EPackageType_IsValid(int value);
const EPackageType EPackageType_MIN = EPackageType_Pb;
const EPackageType EPackageType_MAX = EPackageType_Json;
const int EPackageType_ARRAYSIZE = EPackageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPackageType_descriptor();
inline const ::std::string& EPackageType_Name(EPackageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPackageType_descriptor(), value);
}
inline bool EPackageType_Parse(
    const ::std::string& name, EPackageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPackageType>(
    EPackageType_descriptor(), name, value);
}
enum ERetCode {
  ERetCode_UNKnowErr = -10,
  ERetCode_Overload = -9,
  ERetCode_UNKnowFunc = -1,
  ERetCode_SUCC = 0
};
bool ERetCode_IsValid(int value);
const ERetCode ERetCode_MIN = ERetCode_UNKnowErr;
const ERetCode ERetCode_MAX = ERetCode_SUCC;
const int ERetCode_ARRAYSIZE = ERetCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERetCode_descriptor();
inline const ::std::string& ERetCode_Name(ERetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERetCode_descriptor(), value);
}
inline bool ERetCode_Parse(
    const ::std::string& name, ERetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERetCode>(
    ERetCode_descriptor(), name, value);
}
enum EReqStatus {
  EReqStatus_Doing = 0,
  EReqStatus_Finish = 1,
  EReqStatus_Timeout = 2,
  EReqStatus_Exception = 3
};
bool EReqStatus_IsValid(int value);
const EReqStatus EReqStatus_MIN = EReqStatus_Doing;
const EReqStatus EReqStatus_MAX = EReqStatus_Exception;
const int EReqStatus_ARRAYSIZE = EReqStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EReqStatus_descriptor();
inline const ::std::string& EReqStatus_Name(EReqStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EReqStatus_descriptor(), value);
}
inline bool EReqStatus_Parse(
    const ::std::string& name, EReqStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EReqStatus>(
    EReqStatus_descriptor(), name, value);
}
// ===================================================================

class Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xy.Info) */ {
 public:
  Info();
  virtual ~Info();

  Info(const Info& from);

  inline Info& operator=(const Info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Info(Info&& from) noexcept
    : Info() {
    *this = ::std::move(from);
  }

  inline Info& operator=(Info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Info* internal_default_instance() {
    return reinterpret_cast<const Info*>(
               &_Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Info* other);
  friend void swap(Info& a, Info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Info* New() const final {
    return CreateMaybeMessage<Info>(NULL);
  }

  Info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Info& from);
  void MergeFrom(const Info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xy.Info)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 id_;
  friend struct ::protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestPacket_ContextEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<RequestPacket_ContextEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<RequestPacket_ContextEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  RequestPacket_ContextEntry_DoNotUse();
  RequestPacket_ContextEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const RequestPacket_ContextEntry_DoNotUse& other);
  static const RequestPacket_ContextEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RequestPacket_ContextEntry_DoNotUse*>(&_RequestPacket_ContextEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class RequestPacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xy.RequestPacket) */ {
 public:
  RequestPacket();
  virtual ~RequestPacket();

  RequestPacket(const RequestPacket& from);

  inline RequestPacket& operator=(const RequestPacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestPacket(RequestPacket&& from) noexcept
    : RequestPacket() {
    *this = ::std::move(from);
  }

  inline RequestPacket& operator=(RequestPacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestPacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestPacket* internal_default_instance() {
    return reinterpret_cast<const RequestPacket*>(
               &_RequestPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RequestPacket* other);
  friend void swap(RequestPacket& a, RequestPacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestPacket* New() const final {
    return CreateMaybeMessage<RequestPacket>(NULL);
  }

  RequestPacket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestPacket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestPacket& from);
  void MergeFrom(const RequestPacket& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> context = 7;
  int context_size() const;
  void clear_context();
  static const int kContextFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      context() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_context();

  // optional string sFuncName = 3;
  bool has_sfuncname() const;
  void clear_sfuncname();
  static const int kSFuncNameFieldNumber = 3;
  const ::std::string& sfuncname() const;
  void set_sfuncname(const ::std::string& value);
  #if LANG_CXX11
  void set_sfuncname(::std::string&& value);
  #endif
  void set_sfuncname(const char* value);
  void set_sfuncname(const char* value, size_t size);
  ::std::string* mutable_sfuncname();
  ::std::string* release_sfuncname();
  void set_allocated_sfuncname(::std::string* sfuncname);

  // optional bytes sBuffer = 5;
  bool has_sbuffer() const;
  void clear_sbuffer();
  static const int kSBufferFieldNumber = 5;
  const ::std::string& sbuffer() const;
  void set_sbuffer(const ::std::string& value);
  #if LANG_CXX11
  void set_sbuffer(::std::string&& value);
  #endif
  void set_sbuffer(const char* value);
  void set_sbuffer(const void* value, size_t size);
  ::std::string* mutable_sbuffer();
  ::std::string* release_sbuffer();
  void set_allocated_sbuffer(::std::string* sbuffer);

  // optional uint32 iVersion = 1;
  bool has_iversion() const;
  void clear_iversion();
  static const int kIVersionFieldNumber = 1;
  ::google::protobuf::uint32 iversion() const;
  void set_iversion(::google::protobuf::uint32 value);

  // optional uint32 iRequestId = 2;
  bool has_irequestid() const;
  void clear_irequestid();
  static const int kIRequestIdFieldNumber = 2;
  ::google::protobuf::uint32 irequestid() const;
  void set_irequestid(::google::protobuf::uint32 value);

  // optional uint32 cPacketType = 4;
  bool has_cpackettype() const;
  void clear_cpackettype();
  static const int kCPacketTypeFieldNumber = 4;
  ::google::protobuf::uint32 cpackettype() const;
  void set_cpackettype(::google::protobuf::uint32 value);

  // optional uint32 iTimeoutMs = 6;
  bool has_itimeoutms() const;
  void clear_itimeoutms();
  static const int kITimeoutMsFieldNumber = 6;
  ::google::protobuf::uint32 itimeoutms() const;
  void set_itimeoutms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xy.RequestPacket)
 private:
  void set_has_iversion();
  void clear_has_iversion();
  void set_has_irequestid();
  void clear_has_irequestid();
  void set_has_sfuncname();
  void clear_has_sfuncname();
  void set_has_cpackettype();
  void clear_has_cpackettype();
  void set_has_sbuffer();
  void clear_has_sbuffer();
  void set_has_itimeoutms();
  void clear_has_itimeoutms();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::MapField<
      RequestPacket_ContextEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > context_;
  ::google::protobuf::internal::ArenaStringPtr sfuncname_;
  ::google::protobuf::internal::ArenaStringPtr sbuffer_;
  ::google::protobuf::uint32 iversion_;
  ::google::protobuf::uint32 irequestid_;
  ::google::protobuf::uint32 cpackettype_;
  ::google::protobuf::uint32 itimeoutms_;
  friend struct ::protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponsePacket_ContextEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ResponsePacket_ContextEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ResponsePacket_ContextEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ResponsePacket_ContextEntry_DoNotUse();
  ResponsePacket_ContextEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ResponsePacket_ContextEntry_DoNotUse& other);
  static const ResponsePacket_ContextEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ResponsePacket_ContextEntry_DoNotUse*>(&_ResponsePacket_ContextEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ResponsePacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xy.ResponsePacket) */ {
 public:
  ResponsePacket();
  virtual ~ResponsePacket();

  ResponsePacket(const ResponsePacket& from);

  inline ResponsePacket& operator=(const ResponsePacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponsePacket(ResponsePacket&& from) noexcept
    : ResponsePacket() {
    *this = ::std::move(from);
  }

  inline ResponsePacket& operator=(ResponsePacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponsePacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponsePacket* internal_default_instance() {
    return reinterpret_cast<const ResponsePacket*>(
               &_ResponsePacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ResponsePacket* other);
  friend void swap(ResponsePacket& a, ResponsePacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponsePacket* New() const final {
    return CreateMaybeMessage<ResponsePacket>(NULL);
  }

  ResponsePacket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponsePacket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponsePacket& from);
  void MergeFrom(const ResponsePacket& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponsePacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> context = 7;
  int context_size() const;
  void clear_context();
  static const int kContextFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      context() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_context();

  // optional bytes sBuffer = 4;
  bool has_sbuffer() const;
  void clear_sbuffer();
  static const int kSBufferFieldNumber = 4;
  const ::std::string& sbuffer() const;
  void set_sbuffer(const ::std::string& value);
  #if LANG_CXX11
  void set_sbuffer(::std::string&& value);
  #endif
  void set_sbuffer(const char* value);
  void set_sbuffer(const void* value, size_t size);
  ::std::string* mutable_sbuffer();
  ::std::string* release_sbuffer();
  void set_allocated_sbuffer(::std::string* sbuffer);

  // optional string sRetDesc = 6;
  bool has_sretdesc() const;
  void clear_sretdesc();
  static const int kSRetDescFieldNumber = 6;
  const ::std::string& sretdesc() const;
  void set_sretdesc(const ::std::string& value);
  #if LANG_CXX11
  void set_sretdesc(::std::string&& value);
  #endif
  void set_sretdesc(const char* value);
  void set_sretdesc(const char* value, size_t size);
  ::std::string* mutable_sretdesc();
  ::std::string* release_sretdesc();
  void set_allocated_sretdesc(::std::string* sretdesc);

  // optional uint32 iVersion = 1;
  bool has_iversion() const;
  void clear_iversion();
  static const int kIVersionFieldNumber = 1;
  ::google::protobuf::uint32 iversion() const;
  void set_iversion(::google::protobuf::uint32 value);

  // optional uint32 iRequestId = 2;
  bool has_irequestid() const;
  void clear_irequestid();
  static const int kIRequestIdFieldNumber = 2;
  ::google::protobuf::uint32 irequestid() const;
  void set_irequestid(::google::protobuf::uint32 value);

  // optional uint32 cPacketType = 3;
  bool has_cpackettype() const;
  void clear_cpackettype();
  static const int kCPacketTypeFieldNumber = 3;
  ::google::protobuf::uint32 cpackettype() const;
  void set_cpackettype(::google::protobuf::uint32 value);

  // optional int32 iRetCode = 5;
  bool has_iretcode() const;
  void clear_iretcode();
  static const int kIRetCodeFieldNumber = 5;
  ::google::protobuf::int32 iretcode() const;
  void set_iretcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xy.ResponsePacket)
 private:
  void set_has_iversion();
  void clear_has_iversion();
  void set_has_irequestid();
  void clear_has_irequestid();
  void set_has_cpackettype();
  void clear_has_cpackettype();
  void set_has_sbuffer();
  void clear_has_sbuffer();
  void set_has_iretcode();
  void clear_has_iretcode();
  void set_has_sretdesc();
  void clear_has_sretdesc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::MapField<
      ResponsePacket_ContextEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > context_;
  ::google::protobuf::internal::ArenaStringPtr sbuffer_;
  ::google::protobuf::internal::ArenaStringPtr sretdesc_;
  ::google::protobuf::uint32 iversion_;
  ::google::protobuf::uint32 irequestid_;
  ::google::protobuf::uint32 cpackettype_;
  ::google::protobuf::int32 iretcode_;
  friend struct ::protobuf_common_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Info

// optional uint32 id = 1;
inline bool Info::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Info::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Info::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Info::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Info::id() const {
  // @@protoc_insertion_point(field_get:xy.Info.id)
  return id_;
}
inline void Info::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:xy.Info.id)
}

// optional string name = 2;
inline bool Info::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Info::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Info::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Info::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Info::name() const {
  // @@protoc_insertion_point(field_get:xy.Info.name)
  return name_.GetNoArena();
}
inline void Info::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xy.Info.name)
}
#if LANG_CXX11
inline void Info::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xy.Info.name)
}
#endif
inline void Info::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xy.Info.name)
}
inline void Info::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xy.Info.name)
}
inline ::std::string* Info::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:xy.Info.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Info::release_name() {
  // @@protoc_insertion_point(field_release:xy.Info.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Info::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:xy.Info.name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RequestPacket

// optional uint32 iVersion = 1;
inline bool RequestPacket::has_iversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestPacket::set_has_iversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestPacket::clear_has_iversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestPacket::clear_iversion() {
  iversion_ = 0u;
  clear_has_iversion();
}
inline ::google::protobuf::uint32 RequestPacket::iversion() const {
  // @@protoc_insertion_point(field_get:xy.RequestPacket.iVersion)
  return iversion_;
}
inline void RequestPacket::set_iversion(::google::protobuf::uint32 value) {
  set_has_iversion();
  iversion_ = value;
  // @@protoc_insertion_point(field_set:xy.RequestPacket.iVersion)
}

// optional uint32 iRequestId = 2;
inline bool RequestPacket::has_irequestid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestPacket::set_has_irequestid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestPacket::clear_has_irequestid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestPacket::clear_irequestid() {
  irequestid_ = 0u;
  clear_has_irequestid();
}
inline ::google::protobuf::uint32 RequestPacket::irequestid() const {
  // @@protoc_insertion_point(field_get:xy.RequestPacket.iRequestId)
  return irequestid_;
}
inline void RequestPacket::set_irequestid(::google::protobuf::uint32 value) {
  set_has_irequestid();
  irequestid_ = value;
  // @@protoc_insertion_point(field_set:xy.RequestPacket.iRequestId)
}

// optional string sFuncName = 3;
inline bool RequestPacket::has_sfuncname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestPacket::set_has_sfuncname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestPacket::clear_has_sfuncname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestPacket::clear_sfuncname() {
  sfuncname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sfuncname();
}
inline const ::std::string& RequestPacket::sfuncname() const {
  // @@protoc_insertion_point(field_get:xy.RequestPacket.sFuncName)
  return sfuncname_.GetNoArena();
}
inline void RequestPacket::set_sfuncname(const ::std::string& value) {
  set_has_sfuncname();
  sfuncname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xy.RequestPacket.sFuncName)
}
#if LANG_CXX11
inline void RequestPacket::set_sfuncname(::std::string&& value) {
  set_has_sfuncname();
  sfuncname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xy.RequestPacket.sFuncName)
}
#endif
inline void RequestPacket::set_sfuncname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sfuncname();
  sfuncname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xy.RequestPacket.sFuncName)
}
inline void RequestPacket::set_sfuncname(const char* value, size_t size) {
  set_has_sfuncname();
  sfuncname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xy.RequestPacket.sFuncName)
}
inline ::std::string* RequestPacket::mutable_sfuncname() {
  set_has_sfuncname();
  // @@protoc_insertion_point(field_mutable:xy.RequestPacket.sFuncName)
  return sfuncname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPacket::release_sfuncname() {
  // @@protoc_insertion_point(field_release:xy.RequestPacket.sFuncName)
  if (!has_sfuncname()) {
    return NULL;
  }
  clear_has_sfuncname();
  return sfuncname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPacket::set_allocated_sfuncname(::std::string* sfuncname) {
  if (sfuncname != NULL) {
    set_has_sfuncname();
  } else {
    clear_has_sfuncname();
  }
  sfuncname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfuncname);
  // @@protoc_insertion_point(field_set_allocated:xy.RequestPacket.sFuncName)
}

// optional uint32 cPacketType = 4;
inline bool RequestPacket::has_cpackettype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestPacket::set_has_cpackettype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestPacket::clear_has_cpackettype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestPacket::clear_cpackettype() {
  cpackettype_ = 0u;
  clear_has_cpackettype();
}
inline ::google::protobuf::uint32 RequestPacket::cpackettype() const {
  // @@protoc_insertion_point(field_get:xy.RequestPacket.cPacketType)
  return cpackettype_;
}
inline void RequestPacket::set_cpackettype(::google::protobuf::uint32 value) {
  set_has_cpackettype();
  cpackettype_ = value;
  // @@protoc_insertion_point(field_set:xy.RequestPacket.cPacketType)
}

// optional bytes sBuffer = 5;
inline bool RequestPacket::has_sbuffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestPacket::set_has_sbuffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestPacket::clear_has_sbuffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestPacket::clear_sbuffer() {
  sbuffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sbuffer();
}
inline const ::std::string& RequestPacket::sbuffer() const {
  // @@protoc_insertion_point(field_get:xy.RequestPacket.sBuffer)
  return sbuffer_.GetNoArena();
}
inline void RequestPacket::set_sbuffer(const ::std::string& value) {
  set_has_sbuffer();
  sbuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xy.RequestPacket.sBuffer)
}
#if LANG_CXX11
inline void RequestPacket::set_sbuffer(::std::string&& value) {
  set_has_sbuffer();
  sbuffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xy.RequestPacket.sBuffer)
}
#endif
inline void RequestPacket::set_sbuffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sbuffer();
  sbuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xy.RequestPacket.sBuffer)
}
inline void RequestPacket::set_sbuffer(const void* value, size_t size) {
  set_has_sbuffer();
  sbuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xy.RequestPacket.sBuffer)
}
inline ::std::string* RequestPacket::mutable_sbuffer() {
  set_has_sbuffer();
  // @@protoc_insertion_point(field_mutable:xy.RequestPacket.sBuffer)
  return sbuffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPacket::release_sbuffer() {
  // @@protoc_insertion_point(field_release:xy.RequestPacket.sBuffer)
  if (!has_sbuffer()) {
    return NULL;
  }
  clear_has_sbuffer();
  return sbuffer_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPacket::set_allocated_sbuffer(::std::string* sbuffer) {
  if (sbuffer != NULL) {
    set_has_sbuffer();
  } else {
    clear_has_sbuffer();
  }
  sbuffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sbuffer);
  // @@protoc_insertion_point(field_set_allocated:xy.RequestPacket.sBuffer)
}

// optional uint32 iTimeoutMs = 6;
inline bool RequestPacket::has_itimeoutms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestPacket::set_has_itimeoutms() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestPacket::clear_has_itimeoutms() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestPacket::clear_itimeoutms() {
  itimeoutms_ = 0u;
  clear_has_itimeoutms();
}
inline ::google::protobuf::uint32 RequestPacket::itimeoutms() const {
  // @@protoc_insertion_point(field_get:xy.RequestPacket.iTimeoutMs)
  return itimeoutms_;
}
inline void RequestPacket::set_itimeoutms(::google::protobuf::uint32 value) {
  set_has_itimeoutms();
  itimeoutms_ = value;
  // @@protoc_insertion_point(field_set:xy.RequestPacket.iTimeoutMs)
}

// map<string, string> context = 7;
inline int RequestPacket::context_size() const {
  return context_.size();
}
inline void RequestPacket::clear_context() {
  context_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
RequestPacket::context() const {
  // @@protoc_insertion_point(field_map:xy.RequestPacket.context)
  return context_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
RequestPacket::mutable_context() {
  // @@protoc_insertion_point(field_mutable_map:xy.RequestPacket.context)
  return context_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ResponsePacket

// optional uint32 iVersion = 1;
inline bool ResponsePacket::has_iversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponsePacket::set_has_iversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponsePacket::clear_has_iversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponsePacket::clear_iversion() {
  iversion_ = 0u;
  clear_has_iversion();
}
inline ::google::protobuf::uint32 ResponsePacket::iversion() const {
  // @@protoc_insertion_point(field_get:xy.ResponsePacket.iVersion)
  return iversion_;
}
inline void ResponsePacket::set_iversion(::google::protobuf::uint32 value) {
  set_has_iversion();
  iversion_ = value;
  // @@protoc_insertion_point(field_set:xy.ResponsePacket.iVersion)
}

// optional uint32 iRequestId = 2;
inline bool ResponsePacket::has_irequestid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResponsePacket::set_has_irequestid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResponsePacket::clear_has_irequestid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResponsePacket::clear_irequestid() {
  irequestid_ = 0u;
  clear_has_irequestid();
}
inline ::google::protobuf::uint32 ResponsePacket::irequestid() const {
  // @@protoc_insertion_point(field_get:xy.ResponsePacket.iRequestId)
  return irequestid_;
}
inline void ResponsePacket::set_irequestid(::google::protobuf::uint32 value) {
  set_has_irequestid();
  irequestid_ = value;
  // @@protoc_insertion_point(field_set:xy.ResponsePacket.iRequestId)
}

// optional uint32 cPacketType = 3;
inline bool ResponsePacket::has_cpackettype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResponsePacket::set_has_cpackettype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResponsePacket::clear_has_cpackettype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResponsePacket::clear_cpackettype() {
  cpackettype_ = 0u;
  clear_has_cpackettype();
}
inline ::google::protobuf::uint32 ResponsePacket::cpackettype() const {
  // @@protoc_insertion_point(field_get:xy.ResponsePacket.cPacketType)
  return cpackettype_;
}
inline void ResponsePacket::set_cpackettype(::google::protobuf::uint32 value) {
  set_has_cpackettype();
  cpackettype_ = value;
  // @@protoc_insertion_point(field_set:xy.ResponsePacket.cPacketType)
}

// optional bytes sBuffer = 4;
inline bool ResponsePacket::has_sbuffer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponsePacket::set_has_sbuffer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponsePacket::clear_has_sbuffer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponsePacket::clear_sbuffer() {
  sbuffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sbuffer();
}
inline const ::std::string& ResponsePacket::sbuffer() const {
  // @@protoc_insertion_point(field_get:xy.ResponsePacket.sBuffer)
  return sbuffer_.GetNoArena();
}
inline void ResponsePacket::set_sbuffer(const ::std::string& value) {
  set_has_sbuffer();
  sbuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xy.ResponsePacket.sBuffer)
}
#if LANG_CXX11
inline void ResponsePacket::set_sbuffer(::std::string&& value) {
  set_has_sbuffer();
  sbuffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xy.ResponsePacket.sBuffer)
}
#endif
inline void ResponsePacket::set_sbuffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sbuffer();
  sbuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xy.ResponsePacket.sBuffer)
}
inline void ResponsePacket::set_sbuffer(const void* value, size_t size) {
  set_has_sbuffer();
  sbuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xy.ResponsePacket.sBuffer)
}
inline ::std::string* ResponsePacket::mutable_sbuffer() {
  set_has_sbuffer();
  // @@protoc_insertion_point(field_mutable:xy.ResponsePacket.sBuffer)
  return sbuffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponsePacket::release_sbuffer() {
  // @@protoc_insertion_point(field_release:xy.ResponsePacket.sBuffer)
  if (!has_sbuffer()) {
    return NULL;
  }
  clear_has_sbuffer();
  return sbuffer_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePacket::set_allocated_sbuffer(::std::string* sbuffer) {
  if (sbuffer != NULL) {
    set_has_sbuffer();
  } else {
    clear_has_sbuffer();
  }
  sbuffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sbuffer);
  // @@protoc_insertion_point(field_set_allocated:xy.ResponsePacket.sBuffer)
}

// optional int32 iRetCode = 5;
inline bool ResponsePacket::has_iretcode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResponsePacket::set_has_iretcode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResponsePacket::clear_has_iretcode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResponsePacket::clear_iretcode() {
  iretcode_ = 0;
  clear_has_iretcode();
}
inline ::google::protobuf::int32 ResponsePacket::iretcode() const {
  // @@protoc_insertion_point(field_get:xy.ResponsePacket.iRetCode)
  return iretcode_;
}
inline void ResponsePacket::set_iretcode(::google::protobuf::int32 value) {
  set_has_iretcode();
  iretcode_ = value;
  // @@protoc_insertion_point(field_set:xy.ResponsePacket.iRetCode)
}

// optional string sRetDesc = 6;
inline bool ResponsePacket::has_sretdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponsePacket::set_has_sretdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponsePacket::clear_has_sretdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponsePacket::clear_sretdesc() {
  sretdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sretdesc();
}
inline const ::std::string& ResponsePacket::sretdesc() const {
  // @@protoc_insertion_point(field_get:xy.ResponsePacket.sRetDesc)
  return sretdesc_.GetNoArena();
}
inline void ResponsePacket::set_sretdesc(const ::std::string& value) {
  set_has_sretdesc();
  sretdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xy.ResponsePacket.sRetDesc)
}
#if LANG_CXX11
inline void ResponsePacket::set_sretdesc(::std::string&& value) {
  set_has_sretdesc();
  sretdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xy.ResponsePacket.sRetDesc)
}
#endif
inline void ResponsePacket::set_sretdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sretdesc();
  sretdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xy.ResponsePacket.sRetDesc)
}
inline void ResponsePacket::set_sretdesc(const char* value, size_t size) {
  set_has_sretdesc();
  sretdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xy.ResponsePacket.sRetDesc)
}
inline ::std::string* ResponsePacket::mutable_sretdesc() {
  set_has_sretdesc();
  // @@protoc_insertion_point(field_mutable:xy.ResponsePacket.sRetDesc)
  return sretdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponsePacket::release_sretdesc() {
  // @@protoc_insertion_point(field_release:xy.ResponsePacket.sRetDesc)
  if (!has_sretdesc()) {
    return NULL;
  }
  clear_has_sretdesc();
  return sretdesc_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePacket::set_allocated_sretdesc(::std::string* sretdesc) {
  if (sretdesc != NULL) {
    set_has_sretdesc();
  } else {
    clear_has_sretdesc();
  }
  sretdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sretdesc);
  // @@protoc_insertion_point(field_set_allocated:xy.ResponsePacket.sRetDesc)
}

// map<string, string> context = 7;
inline int ResponsePacket::context_size() const {
  return context_.size();
}
inline void ResponsePacket::clear_context() {
  context_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ResponsePacket::context() const {
  // @@protoc_insertion_point(field_map:xy.ResponsePacket.context)
  return context_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ResponsePacket::mutable_context() {
  // @@protoc_insertion_point(field_mutable_map:xy.ResponsePacket.context)
  return context_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace xy

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xy::ECallType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xy::ECallType>() {
  return ::xy::ECallType_descriptor();
}
template <> struct is_proto_enum< ::xy::EPackageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xy::EPackageType>() {
  return ::xy::EPackageType_descriptor();
}
template <> struct is_proto_enum< ::xy::ERetCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xy::ERetCode>() {
  return ::xy::ERetCode_descriptor();
}
template <> struct is_proto_enum< ::xy::EReqStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xy::EReqStatus>() {
  return ::xy::EReqStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_common_2eproto
